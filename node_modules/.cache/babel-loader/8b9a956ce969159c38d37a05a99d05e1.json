{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\react-router-6-master\\\\src\\\\components\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"./auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate(); //ADMIN\n  //USER\n\n  const login = () => {\n    localStorage.setItem(\"user\", JSON.stringify({\n      role: \"ADMIN\"\n    }));\n    navigate(\"/dashboard\");\n  };\n\n  class Login extends Component {\n    constructor(props) {\n      super(props);\n      this.handleLogin = this.handleLogin.bind(this);\n      this.state = {\n        redirect: null,\n        Email: \"\",\n        Password: \"\",\n        loading: false,\n        message: \"\"\n      };\n    }\n\n    componentDidMount() {\n      const currentUser = AuthService.getCurrentUser();\n\n      if (currentUser) {\n        this.setState({\n          redirect: ''\n        });\n      }\n\n      ;\n    }\n\n    componentWillUnmount() {\n      window.location.reload();\n    }\n\n    validationSchema() {\n      return Yup.object().shape({\n        Email: Yup.string().required(\"This field is required!\"),\n        Password: Yup.string().required(\"This field is required!\")\n      });\n    }\n\n    handleLogin(formValue) {\n      const {\n        Email,\n        Password\n      } = formValue;\n      this.setState({\n        message: \"\",\n        loading: true\n      });\n      AuthService.login(Email, Password).then(() => {\n        this.setState({\n          redirect: '/dashboard'\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      });\n    }\n\n    render() {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: this.state.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this);\n      }\n\n      const initialValues = {\n        Email: \"\",\n        Password: \"\"\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/pics/logo.png\",\n              alt: \"-img\",\n              className: \"profile-img-card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: initialValues,\n              validationSchema: this.validationSchema,\n              onSubmit: this.handleLogin,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"main-heading\",\n                  children: \"SIGN-IN \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 4\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"head\",\n                  children: \"Welcome to Mobile Repair System\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 82\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"Email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"Email\",\n                    type: \"text\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"Email\",\n                    component: \"div\",\n                    className: \"alert alert-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"Password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"Password\",\n                    type: \"Password\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"Password\",\n                    component: \"div\",\n                    className: \"alert alert-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: login,\n                    className: \"btn btn-primary btn-block \",\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 6\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message\",\n                    children: \"Dont have an account? contact portal administor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n\n  }\n};\n\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/react-router-6-master/src/components/Login.tsx"],"names":["Component","Navigate","useNavigate","Formik","Field","Form","ErrorMessage","Yup","AuthService","Login","navigate","login","localStorage","setItem","JSON","stringify","role","constructor","props","handleLogin","bind","state","redirect","Email","Password","loading","message","componentDidMount","currentUser","getCurrentUser","setState","componentWillUnmount","window","location","reload","validationSchema","object","shape","string","required","formValue","then","error","resMessage","response","data","toString","render","initialValues"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"./auth.service\";\nconst Login = () => {\n\tconst navigate = useNavigate()\n\t\n\t//ADMIN\n\t//USER\n\n\tconst login= () => {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify({role: \"ADMIN\"}))\n\t\tnavigate(\"/dashboard\")\n\t}\n\t\ntype Props = {};\n\ntype State = {\n  redirect: string | null,\n  Email: string,\n  Password: string,\n  loading: boolean,\n  message: string\n};\n\n class Login extends Component<Props, State> {\n\t\n  constructor(props: Props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      redirect: null,\n      Email: \"\",\n      Password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (currentUser) {\n      this.setState({ redirect: ''});\n    };\n  }\n\n  componentWillUnmount() {\n    window.location.reload();\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      Email: Yup.string().required(\"This field is required!\"),\n      Password: Yup.string().required(\"This field is required!\"),\n    });\n  }\n\n  handleLogin(formValue: { Email: string; Password: string }) {\n    const { Email, Password } = formValue;\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n\n    AuthService.login(Email, Password).then(\n      () => {\n        this.setState({\n          redirect: '/dashboard'\n        });\n      },\n      error => {\n        \n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      }\n    );\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />\n    }\n\n\n    const initialValues = {\n      Email: \"\",\n      Password: \"\",\n    };\n\n    return (<div className='full-page'>\n\t\t<div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"/pics/logo.png\"\n            alt=\"-img\"\n            className=\"profile-img-card\"\n          />\n      \n\n          <Formik\n            initialValues={initialValues}\n            validationSchema={this.validationSchema}\n            onSubmit={this.handleLogin}\n          >\n            <Form>\n\t\t\t<h1 className=\"main-heading\">SIGN-IN </h1>\n                        <h2 className=\"head\">Welcome to Mobile Repair System</h2><br></br>\n              <div className=\"form-group\">\n                <label htmlFor=\"Email\">Email</label>\n                <Field name=\"Email\" type=\"text\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"Email\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\t\t\t  \n              <div className=\"form-group\">\n                <label htmlFor=\"Password\">Password</label>\n                <Field name=\"Password\" type=\"Password\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"Password\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\t\t\t \n              <div className=\"form-group\"> \n\t\t\t  <button onClick={login}         \n\t\t\t  className=\"btn btn-primary btn-block \"  >                 \n              Login\n                </button>\n                \n                <p className=\"message\">Dont have an account? contact portal administor</p></div>            \n\n              \n            </Form>\n          </Formik>\n        </div>\n      </div>\n\t  </div>\n    );\n  }\n}\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}