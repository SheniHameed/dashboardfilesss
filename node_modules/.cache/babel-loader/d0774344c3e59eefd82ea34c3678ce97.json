{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\react-router-6-master\\\\src\\\\components\\\\Login.tsx\";\nimport { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"./auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = {\n      redirect: null,\n      Email: \"\",\n      Password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (currentUser) {\n      this.setState({\n        redirect: \"/dashboard\"\n      });\n    }\n\n    ;\n  }\n\n  componentWillUnmount() {\n    window.location.reload();\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      Email: Yup.string().required(\"This field is required!\"),\n      Password: Yup.string().required(\"This field is required!\")\n    });\n  }\n\n  handleLogin(formValue) {\n    const {\n      Email,\n      Password\n    } = formValue;\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    AuthService.login(Email, Password).then(() => {\n      this.setState({\n        redirect: \"/dashboard\"\n      });\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: this.state.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      loading,\n      message\n    } = this.state;\n    const initialValues = {\n      Email: \"\",\n      Password: \"\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/pics/logo.png\",\n          alt: \"-img\",\n          className: \"formlogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main-heading\",\n            children: \"SIGN-IN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"head\",\n            children: \"Welcome to Mobile Repair System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 4\n        }, this), \"initialValues=\", initialValues, \"validationSchema=\", this.validationSchema, \"onSubmit=\", this.handleLogin, /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"Email\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"Password\",\n              type: \"Password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block\",\n              disabled: loading,\n              children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Asus/Desktop/react-router-6-master/src/components/Login.tsx"],"names":["Component","Navigate","Field","Form","Yup","AuthService","Login","constructor","props","handleLogin","bind","state","redirect","Email","Password","loading","message","componentDidMount","currentUser","getCurrentUser","setState","componentWillUnmount","window","location","reload","validationSchema","object","shape","string","required","formValue","login","then","render","initialValues"],"mappings":"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","sourcesContent":["\nimport { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"./auth.service\";\n\n\n\ntype Props = {};\n\ntype State = {\n  redirect: string | null,\n  Email: string,\n  Password: string,\n  loading: boolean,\n  message: string\n};\n\nexport default class Login extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      redirect: null,\n      Email: \"\",\n      Password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (currentUser) {\n      this.setState({ redirect: \"/dashboard\" });\n    };\n  }\n\n  componentWillUnmount() {\n    window.location.reload();\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      Email: Yup.string().required(\"This field is required!\"),\n      Password: Yup.string().required(\"This field is required!\"),\n    });\n  }\n\n  handleLogin(formValue: { Email: string; Password: string }) {\n    const { Email, Password } = formValue;\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n\n    AuthService.login(Email, Password).then(\n      () => {\n        this.setState({\n          redirect: \"/dashboard\"\n        });\n      },\n\t\t\n    );\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />\n    }\n\n    const { loading, message } = this.state;\n\n    const initialValues = {\n      Email: \"\",\n      Password: \"\",\n    };\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"login-box\">\n          <img\n            src=\"/pics/logo.png\"\n            alt=\"-img\"\n            className=\"formlogo\"/>\n\t\t\t<div className=\"login-box\">\n\t\t\t  <h1 className=\"main-heading\">SIGN-IN </h1>\n                        <h2 className=\"head\">Welcome to Mobile Repair System</h2></div>\n        \n\n          \n            initialValues={initialValues}\n            validationSchema={this.validationSchema}\n            onSubmit={this.handleLogin}\n          \n            <Form>\n              \n                <label htmlFor=\"Email\">Email</label>\n                <Field name=\"Email\" type=\"text\" className=\"form-control\" />\n             \n            \n\n              <div className=\"form-group\">\n                <label htmlFor=\"Password\">Password</label>\n                <Field name=\"Password\" type=\"Password\" className=\"form-control\" />\n              \n              </div>\n\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n\n\n            </Form>\n        \n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}